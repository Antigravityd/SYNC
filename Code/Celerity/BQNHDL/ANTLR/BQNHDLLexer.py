# Generated from BQNHDL.g4 by ANTLR 4.5.3
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2-")
        buf.write("\u0150\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\3\2")
        buf.write("\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3")
        buf.write("\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16")
        buf.write("\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\23")
        buf.write("\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26")
        buf.write("\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36")
        buf.write("\3\37\3\37\3 \3 \3 \5 \u00b4\n \3!\5!\u00b7\n!\3!\3!\3")
        buf.write("!\3!\5!\u00bd\n!\5!\u00bf\n!\3\"\5\"\u00c2\n\"\3\"\6\"")
        buf.write("\u00c5\n\"\r\"\16\"\u00c6\3#\3#\6#\u00cb\n#\r#\16#\u00cc")
        buf.write("\3#\3#\6#\u00d1\n#\r#\16#\u00d2\5#\u00d5\n#\5#\u00d7\n")
        buf.write("#\3$\3$\3%\3%\3%\3%\3%\5%\u00e0\n%\3&\3&\3&\3&\7&\u00e6")
        buf.write("\n&\f&\16&\u00e9\13&\3&\3&\3&\5&\u00ee\n&\3\'\3\'\3\'")
        buf.write("\3\'\3\'\5\'\u00f5\n\'\3(\3(\3(\5(\u00fa\n(\3)\3)\3)\5")
        buf.write(")\u00ff\n)\3*\3*\3*\5*\u0104\n*\3+\3+\7+\u0108\n+\f+\16")
        buf.write("+\u010b\13+\3+\3+\5+\u010f\n+\3,\3,\7,\u0113\n,\f,\16")
        buf.write(",\u0116\13,\3,\3,\5,\u011a\n,\3-\3-\3-\7-\u011f\n-\f-")
        buf.write("\16-\u0122\13-\3-\3-\5-\u0126\n-\3.\3.\3.\7.\u012b\n.")
        buf.write("\f.\16.\u012e\13.\3.\3.\3.\3.\5.\u0134\n.\3/\3/\5/\u0138")
        buf.write("\n/\3\60\5\60\u013b\n\60\3\61\3\61\3\61\5\61\u0140\n\61")
        buf.write("\3\62\3\62\3\62\3\62\3\63\3\63\7\63\u0148\n\63\f\63\16")
        buf.write("\63\u014b\13\63\3\63\3\63\3\63\3\63\4\u00e7\u0149\2\64")
        buf.write("\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31")
        buf.write("\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31")
        buf.write("\61\32\63\33\65\34\67\359\36;\37= ?!A\2C\2E\2G\2I\"K#")
        buf.write("M$O%Q&S\'U(W)Y*[+]\2_\2a\2c,e-\3\2\r\4\2KKkk\4\2GGgg\3")
        buf.write("\2\62;\"\2##--//\61\61>@~~\u00ad\u00ae\u00bd\u00bd\u00d9")
        buf.write("\u00d9\u00f9\u00f9\u2193\u2193\u2195\u2195\u2197\u2197")
        buf.write("\u220c\u220c\u221c\u221c\u2229\u222a\u2240\u2240\u224f")
        buf.write("\u224f\u2262\u2264\u2266\u2267\u2291\u2294\u2296\u2296")
        buf.write("\u22a4\u22a5\u22c8\u22c8\u230a\u230a\u230c\u230c\u233f")
        buf.write("\u233f\u234b\u234b\u234d\u234d\u2354\u2354\u2379\u2379")
        buf.write("\u294c\u294c\t\2bb\u00aa\u00aa\u00b6\u00b6\u02da\u02db")
        buf.write("\u02de\u02df\u207e\u207e\u231e\u231e\f\2\u221a\u221a\u229a")
        buf.write("\u229a\u22ba\u22ba\u2340\u2340\u2361\u2361\u238b\u238c")
        buf.write("\u25cd\u25cd\u25f8\u25f8\u2689\u2689\u27de\u27de\3\2c")
        buf.write("|\3\2C\\\5\2C\\aac|\6\2\62;\u00b1\u00b1\u03c2\u03c2\u2220")
        buf.write("\u2220\4\2\13\13\"\"\u0167\2\3\3\2\2\2\2\5\3\2\2\2\2\7")
        buf.write("\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2")
        buf.write("\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2")
        buf.write("\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2")
        buf.write("\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2")
        buf.write("\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63")
        buf.write("\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2")
        buf.write("\2\2=\3\2\2\2\2?\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2")
        buf.write("\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3")
        buf.write("\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\3g")
        buf.write("\3\2\2\2\5i\3\2\2\2\7k\3\2\2\2\tm\3\2\2\2\13o\3\2\2\2")
        buf.write("\rq\3\2\2\2\17s\3\2\2\2\21u\3\2\2\2\23w\3\2\2\2\25y\3")
        buf.write("\2\2\2\27{\3\2\2\2\31}\3\2\2\2\33\177\3\2\2\2\35\u0082")
        buf.write("\3\2\2\2\37\u0085\3\2\2\2!\u0087\3\2\2\2#\u0089\3\2\2")
        buf.write("\2%\u008c\3\2\2\2\'\u008f\3\2\2\2)\u0092\3\2\2\2+\u0095")
        buf.write("\3\2\2\2-\u0098\3\2\2\2/\u009b\3\2\2\2\61\u009f\3\2\2")
        buf.write("\2\63\u00a4\3\2\2\2\65\u00a6\3\2\2\2\67\u00a8\3\2\2\2")
        buf.write("9\u00aa\3\2\2\2;\u00ac\3\2\2\2=\u00ae\3\2\2\2?\u00b0\3")
        buf.write("\2\2\2A\u00b6\3\2\2\2C\u00c1\3\2\2\2E\u00d6\3\2\2\2G\u00d8")
        buf.write("\3\2\2\2I\u00df\3\2\2\2K\u00ed\3\2\2\2M\u00f4\3\2\2\2")
        buf.write("O\u00f9\3\2\2\2Q\u00fe\3\2\2\2S\u0103\3\2\2\2U\u010e\3")
        buf.write("\2\2\2W\u0119\3\2\2\2Y\u0125\3\2\2\2[\u0133\3\2\2\2]\u0137")
        buf.write("\3\2\2\2_\u013a\3\2\2\2a\u013f\3\2\2\2c\u0141\3\2\2\2")
        buf.write("e\u0145\3\2\2\2gh\7\u22c6\2\2h\4\3\2\2\2ij\7.\2\2j\6\3")
        buf.write("\2\2\2kl\7\f\2\2l\b\3\2\2\2mn\7\u21d2\2\2n\n\3\2\2\2o")
        buf.write("p\7\60\2\2p\f\3\2\2\2qr\7*\2\2r\16\3\2\2\2st\7+\2\2t\20")
        buf.write("\3\2\2\2uv\7\u27ea\2\2v\22\3\2\2\2wx\7\u27eb\2\2x\24\3")
        buf.write("\2\2\2yz\7\u2041\2\2z\26\3\2\2\2{|\7\u2192\2\2|\30\3\2")
        buf.write("\2\2}~\7\u21ab\2\2~\32\3\2\2\2\177\u0080\7\ud837\2\2\u0080")
        buf.write("\u0081\7\udd4c\2\2\u0081\34\3\2\2\2\u0082\u0083\7\ud837")
        buf.write("\2\2\u0083\u0084\7\udd65\2\2\u0084\36\3\2\2\2\u0085\u0086")
        buf.write("\7\u2194\2\2\u0086 \3\2\2\2\u0087\u0088\7\u00b9\2\2\u0088")
        buf.write("\"\3\2\2\2\u0089\u008a\7\ud837\2\2\u008a\u008b\7\udd6a")
        buf.write("\2\2\u008b$\3\2\2\2\u008c\u008d\7\ud837\2\2\u008d\u008e")
        buf.write("\7\udd6b\2\2\u008e&\3\2\2\2\u008f\u0090\7\ud837\2\2\u0090")
        buf.write("\u0091\7\udd59\2\2\u0091(\3\2\2\2\u0092\u0093\7\ud837")
        buf.write("\2\2\u0093\u0094\7\udd3f\2\2\u0094*\3\2\2\2\u0095\u0096")
        buf.write("\7\ud837\2\2\u0096\u0097\7\udd5a\2\2\u0097,\3\2\2\2\u0098")
        buf.write("\u0099\7\ud837\2\2\u0099\u009a\7\udd40\2\2\u009a.\3\2")
        buf.write("\2\2\u009b\u009c\7a\2\2\u009c\u009d\7\ud837\2\2\u009d")
        buf.write("\u009e\7\udd65\2\2\u009e\60\3\2\2\2\u009f\u00a0\7a\2\2")
        buf.write("\u00a0\u00a1\7\ud837\2\2\u00a1\u00a2\7\udd65\2\2\u00a2")
        buf.write("\u00a3\7a\2\2\u00a3\62\3\2\2\2\u00a4\u00a5\7\u207e\2\2")
        buf.write("\u00a5\64\3\2\2\2\u00a6\u00a7\7\u02de\2\2\u00a7\66\3\2")
        buf.write("\2\2\u00a8\u00a9\7<\2\2\u00a98\3\2\2\2\u00aa\u00ab\7}")
        buf.write("\2\2\u00ab:\3\2\2\2\u00ac\u00ad\7\177\2\2\u00ad<\3\2\2")
        buf.write("\2\u00ae\u00af\7=\2\2\u00af>\3\2\2\2\u00b0\u00b3\5A!\2")
        buf.write("\u00b1\u00b2\t\2\2\2\u00b2\u00b4\5A!\2\u00b3\u00b1\3\2")
        buf.write("\2\2\u00b3\u00b4\3\2\2\2\u00b4@\3\2\2\2\u00b5\u00b7\7")
        buf.write("\u00b1\2\2\u00b6\u00b5\3\2\2\2\u00b6\u00b7\3\2\2\2\u00b7")
        buf.write("\u00be\3\2\2\2\u00b8\u00bf\7\u2220\2\2\u00b9\u00bc\5E")
        buf.write("#\2\u00ba\u00bb\t\3\2\2\u00bb\u00bd\5C\"\2\u00bc\u00ba")
        buf.write("\3\2\2\2\u00bc\u00bd\3\2\2\2\u00bd\u00bf\3\2\2\2\u00be")
        buf.write("\u00b8\3\2\2\2\u00be\u00b9\3\2\2\2\u00bfB\3\2\2\2\u00c0")
        buf.write("\u00c2\7\u00b1\2\2\u00c1\u00c0\3\2\2\2\u00c1\u00c2\3\2")
        buf.write("\2\2\u00c2\u00c4\3\2\2\2\u00c3\u00c5\5G$\2\u00c4\u00c3")
        buf.write("\3\2\2\2\u00c5\u00c6\3\2\2\2\u00c6\u00c4\3\2\2\2\u00c6")
        buf.write("\u00c7\3\2\2\2\u00c7D\3\2\2\2\u00c8\u00d7\7\u03c2\2\2")
        buf.write("\u00c9\u00cb\5G$\2\u00ca\u00c9\3\2\2\2\u00cb\u00cc\3\2")
        buf.write("\2\2\u00cc\u00ca\3\2\2\2\u00cc\u00cd\3\2\2\2\u00cd\u00d4")
        buf.write("\3\2\2\2\u00ce\u00d0\7\60\2\2\u00cf\u00d1\5G$\2\u00d0")
        buf.write("\u00cf\3\2\2\2\u00d1\u00d2\3\2\2\2\u00d2\u00d0\3\2\2\2")
        buf.write("\u00d2\u00d3\3\2\2\2\u00d3\u00d5\3\2\2\2\u00d4\u00ce\3")
        buf.write("\2\2\2\u00d4\u00d5\3\2\2\2\u00d5\u00d7\3\2\2\2\u00d6\u00c8")
        buf.write("\3\2\2\2\u00d6\u00ca\3\2\2\2\u00d7F\3\2\2\2\u00d8\u00d9")
        buf.write("\t\4\2\2\u00d9H\3\2\2\2\u00da\u00db\7)\2\2\u00db\u00dc")
        buf.write("\13\2\2\2\u00dc\u00e0\7)\2\2\u00dd\u00de\7\u2024\2\2\u00de")
        buf.write("\u00e0\5I%\2\u00df\u00da\3\2\2\2\u00df\u00dd\3\2\2\2\u00e0")
        buf.write("J\3\2\2\2\u00e1\u00e7\7$\2\2\u00e2\u00e3\7$\2\2\u00e3")
        buf.write("\u00e6\7$\2\2\u00e4\u00e6\13\2\2\2\u00e5\u00e2\3\2\2\2")
        buf.write("\u00e5\u00e4\3\2\2\2\u00e6\u00e9\3\2\2\2\u00e7\u00e8\3")
        buf.write("\2\2\2\u00e7\u00e5\3\2\2\2\u00e8\u00ea\3\2\2\2\u00e9\u00e7")
        buf.write("\3\2\2\2\u00ea\u00ee\7$\2\2\u00eb\u00ec\7\u2024\2\2\u00ec")
        buf.write("\u00ee\5K&\2\u00ed\u00e1\3\2\2\2\u00ed\u00eb\3\2\2\2\u00ee")
        buf.write("L\3\2\2\2\u00ef\u00f5\5? \2\u00f0\u00f5\5I%\2\u00f1\u00f5")
        buf.write("\5K&\2\u00f2\u00f3\7\u2024\2\2\u00f3\u00f5\5M\'\2\u00f4")
        buf.write("\u00ef\3\2\2\2\u00f4\u00f0\3\2\2\2\u00f4\u00f1\3\2\2\2")
        buf.write("\u00f4\u00f2\3\2\2\2\u00f5N\3\2\2\2\u00f6\u00fa\t\5\2")
        buf.write("\2\u00f7\u00f8\7\u2024\2\2\u00f8\u00fa\5O(\2\u00f9\u00f6")
        buf.write("\3\2\2\2\u00f9\u00f7\3\2\2\2\u00faP\3\2\2\2\u00fb\u00ff")
        buf.write("\t\6\2\2\u00fc\u00fd\7\u2024\2\2\u00fd\u00ff\5Q)\2\u00fe")
        buf.write("\u00fb\3\2\2\2\u00fe\u00fc\3\2\2\2\u00ffR\3\2\2\2\u0100")
        buf.write("\u0104\t\7\2\2\u0101\u0102\7\u2024\2\2\u0102\u0104\5S")
        buf.write("*\2\u0103\u0100\3\2\2\2\u0103\u0101\3\2\2\2\u0104T\3\2")
        buf.write("\2\2\u0105\u0109\t\b\2\2\u0106\u0108\5]/\2\u0107\u0106")
        buf.write("\3\2\2\2\u0108\u010b\3\2\2\2\u0109\u0107\3\2\2\2\u0109")
        buf.write("\u010a\3\2\2\2\u010a\u010f\3\2\2\2\u010b\u0109\3\2\2\2")
        buf.write("\u010c\u010d\7\u2024\2\2\u010d\u010f\5U+\2\u010e\u0105")
        buf.write("\3\2\2\2\u010e\u010c\3\2\2\2\u010fV\3\2\2\2\u0110\u0114")
        buf.write("\t\t\2\2\u0111\u0113\5]/\2\u0112\u0111\3\2\2\2\u0113\u0116")
        buf.write("\3\2\2\2\u0114\u0112\3\2\2\2\u0114\u0115\3\2\2\2\u0115")
        buf.write("\u011a\3\2\2\2\u0116\u0114\3\2\2\2\u0117\u0118\7\u2024")
        buf.write("\2\2\u0118\u011a\5W,\2\u0119\u0110\3\2\2\2\u0119\u0117")
        buf.write("\3\2\2\2\u011aX\3\2\2\2\u011b\u011c\7a\2\2\u011c\u0120")
        buf.write("\5_\60\2\u011d\u011f\5]/\2\u011e\u011d\3\2\2\2\u011f\u0122")
        buf.write("\3\2\2\2\u0120\u011e\3\2\2\2\u0120\u0121\3\2\2\2\u0121")
        buf.write("\u0126\3\2\2\2\u0122\u0120\3\2\2\2\u0123\u0124\7\u2024")
        buf.write("\2\2\u0124\u0126\5Y-\2\u0125\u011b\3\2\2\2\u0125\u0123")
        buf.write("\3\2\2\2\u0126Z\3\2\2\2\u0127\u0128\7a\2\2\u0128\u012c")
        buf.write("\5_\60\2\u0129\u012b\5]/\2\u012a\u0129\3\2\2\2\u012b\u012e")
        buf.write("\3\2\2\2\u012c\u012a\3\2\2\2\u012c\u012d\3\2\2\2\u012d")
        buf.write("\u012f\3\2\2\2\u012e\u012c\3\2\2\2\u012f\u0130\7a\2\2")
        buf.write("\u0130\u0134\3\2\2\2\u0131\u0132\7\u2024\2\2\u0132\u0134")
        buf.write("\5[.\2\u0133\u0127\3\2\2\2\u0133\u0131\3\2\2\2\u0134\\")
        buf.write("\3\2\2\2\u0135\u0138\5_\60\2\u0136\u0138\5a\61\2\u0137")
        buf.write("\u0135\3\2\2\2\u0137\u0136\3\2\2\2\u0138^\3\2\2\2\u0139")
        buf.write("\u013b\t\n\2\2\u013a\u0139\3\2\2\2\u013b`\3\2\2\2\u013c")
        buf.write("\u0140\t\13\2\2\u013d\u013e\7\60\2\2\u013e\u0140\t\4\2")
        buf.write("\2\u013f\u013c\3\2\2\2\u013f\u013d\3\2\2\2\u0140b\3\2")
        buf.write("\2\2\u0141\u0142\t\f\2\2\u0142\u0143\3\2\2\2\u0143\u0144")
        buf.write("\b\62\2\2\u0144d\3\2\2\2\u0145\u0149\7%\2\2\u0146\u0148")
        buf.write("\13\2\2\2\u0147\u0146\3\2\2\2\u0148\u014b\3\2\2\2\u0149")
        buf.write("\u014a\3\2\2\2\u0149\u0147\3\2\2\2\u014a\u014c\3\2\2\2")
        buf.write("\u014b\u0149\3\2\2\2\u014c\u014d\7\f\2\2\u014d\u014e\3")
        buf.write("\2\2\2\u014e\u014f\b\63\2\2\u014ff\3\2\2\2!\2\u00b3\u00b6")
        buf.write("\u00bc\u00be\u00c1\u00c6\u00cc\u00d2\u00d4\u00d6\u00df")
        buf.write("\u00e5\u00e7\u00ed\u00f4\u00f9\u00fe\u0103\u0109\u010e")
        buf.write("\u0114\u0119\u0120\u0125\u012c\u0133\u0137\u013a\u013f")
        buf.write("\u0149\3\b\2\2")
        return buf.getvalue()


class BQNHDLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    NUMBER = 31
    CHARACTER = 32
    STRING = 33
    Sl = 34
    Fl = 35
    Ml = 36
    Cl = 37
    S = 38
    F = 39
    M = 40
    C = 41
    WS = 42
    COMMENT = 43

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'⋄'", "','", "'\n'", "'⇐'", "'.'", "'('", "')'", "'⟨'", "'⟩'", 
            "'‿'", "'←'", "'↩'", "'𝕊'", "'𝕣'", "'→'", "'·'", "'𝕨'", "'𝕩'", 
            "'𝕗'", "'𝔽'", "'𝕘'", "'𝔾'", "'_𝕣'", "'_𝕣_'", "'⁼'", "'˜'", 
            "':'", "'{'", "'}'", "';'" ]

    symbolicNames = [ "<INVALID>",
            "NUMBER", "CHARACTER", "STRING", "Sl", "Fl", "Ml", "Cl", "S", 
            "F", "M", "C", "WS", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "NUMBER", "COMPONENT", 
                  "EXPONENT", "MANTISSA", "DIGIT", "CHARACTER", "STRING", 
                  "Sl", "Fl", "Ml", "Cl", "S", "F", "M", "C", "ALPHANUMERIC", 
                  "ALPHABETIC", "NUMERIC", "WS", "COMMENT" ]

    grammarFileName = "BQNHDL.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


