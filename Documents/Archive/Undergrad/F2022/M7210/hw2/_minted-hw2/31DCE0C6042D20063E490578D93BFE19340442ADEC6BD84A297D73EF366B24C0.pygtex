\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{p}{(}\PYG{k}{use\PYGZhy{}modules}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{srfi}\PYG{+w}{ }\PYG{n+nv}{srfi\PYGZhy{}1}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{ice\PYGZhy{}9}\PYG{+w}{ }\PYG{n+nv}{pretty\PYGZhy{}print}\PYG{p}{))}

\PYG{c+c1}{;; Generator candidates}
\PYG{p}{(}\PYG{k}{define}\PYG{+w}{ }\PYG{n+nv}{r}\PYG{+w}{ }\PYG{o}{\PYGZsq{}}\PYG{p}{((}\PYG{l+m+mi}{1}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{)))}
\PYG{p}{(}\PYG{k}{define}\PYG{+w}{ }\PYG{n+nv}{s}\PYG{+w}{ }\PYG{o}{\PYGZsq{}}\PYG{p}{((}\PYG{l+m+mi}{1}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{)))}

\PYG{c+c1}{;; Shorthand for the modular arithmetic operations.}
\PYG{c+c1}{;; Replace these with some $n\neq 3$ to extend to $\mathbb{F}_{3}$}
\PYG{p}{(}\PYG{k}{define}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{+mod3}\PYG{+w}{ }\PYG{n+nv}{x}\PYG{+w}{ }\PYG{n+nv}{y}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{modulo}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{+}\PYG{+w}{ }\PYG{n+nv}{x}\PYG{+w}{ }\PYG{n+nv}{y}\PYG{p}{)}\PYG{+w}{ }\PYG{l+m+mi}{3}\PYG{p}{))}
\PYG{p}{(}\PYG{k}{define}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{*mod3}\PYG{+w}{ }\PYG{n+nv}{x}\PYG{+w}{ }\PYG{n+nv}{y}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{modulo}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{*}\PYG{+w}{ }\PYG{n+nv}{x}\PYG{+w}{ }\PYG{n+nv}{y}\PYG{p}{)}\PYG{+w}{ }\PYG{l+m+mi}{3}\PYG{p}{))}

\PYG{c+c1}{;; Calculate the determinant of a 2\PYGZhy{}by\PYGZhy{}2 matrix.}
\PYG{c+c1}{;; Replace with the more complicated $n$\PYGZhy{}by\PYGZhy{}$n$ version to extend beyond $GL_{2}$.}
\PYG{p}{(}\PYG{k}{define}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{det}\PYG{+w}{ }\PYG{n+nv}{matrix}\PYG{p}{)}
\PYG{+w}{  }\PYG{p}{(}\PYG{n+nb}{modulo}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{\PYGZhy{}}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{*}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{caar}\PYG{+w}{ }\PYG{n+nv}{matrix}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{cadadr}\PYG{+w}{ }\PYG{n+nv}{matrix}\PYG{p}{))}
\PYG{+w}{	     }\PYG{p}{(}\PYG{n+nb}{*}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{cadar}\PYG{+w}{ }\PYG{n+nv}{matrix}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{caadr}\PYG{+w}{ }\PYG{n+nv}{matrix}\PYG{p}{)))}
\PYG{+w}{	  }\PYG{l+m+mi}{3}\PYG{p}{))}

\PYG{c+c1}{;; Multiply two matrices (general)}
\PYG{p}{(}\PYG{k}{define}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{mmult}\PYG{+w}{ }\PYG{n+nv}{mat1}\PYG{+w}{ }\PYG{n+nv}{mat2}\PYG{p}{)}
\PYG{+w}{  }\PYG{p}{(}\PYG{n+nb}{map}
\PYG{+w}{   }\PYG{p}{(}\PYG{k}{lambda}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{row}\PYG{p}{)}
\PYG{+w}{     }\PYG{p}{(}\PYG{n+nb}{apply}\PYG{+w}{ }\PYG{n+nb}{map}
\PYG{+w}{	    }\PYG{p}{(}\PYG{k}{lambda}\PYG{+w}{ }\PYG{n+nv}{column}
\PYG{+w}{	      }\PYG{p}{(}\PYG{n+nb}{apply}\PYG{+w}{ }\PYG{n+nv}{+mod3}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{map}\PYG{+w}{ }\PYG{n+nv}{*mod3}\PYG{+w}{ }\PYG{n+nv}{row}\PYG{+w}{ }\PYG{n+nv}{column}\PYG{p}{)))}
\PYG{+w}{	    }\PYG{n+nv}{mat2}\PYG{p}{))}
\PYG{+w}{   }\PYG{n+nv}{mat1}\PYG{p}{))}



\PYG{c+c1}{;; Take the Cartesian product of any number of lists.}
\PYG{p}{(}\PYG{k}{define}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{cart\PYGZhy{}product}\PYG{+w}{ }\PYG{n+nv}{lists}\PYG{p}{)}
\PYG{+w}{  }\PYG{p}{(}\PYG{n+nb}{fold\PYGZhy{}right}\PYG{+w}{ }\PYG{p}{(}\PYG{k}{lambda}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{xs}\PYG{+w}{ }\PYG{n+nv}{ys}\PYG{p}{)}
\PYG{+w}{                }\PYG{p}{(}\PYG{n+nb}{append\PYGZhy{}map}\PYG{+w}{ }\PYG{p}{(}\PYG{k}{lambda}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{x}\PYG{p}{)}
\PYG{+w}{                              }\PYG{p}{(}\PYG{n+nb}{map}\PYG{+w}{ }\PYG{p}{(}\PYG{k}{lambda}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{y}\PYG{p}{)}
\PYG{+w}{                                     }\PYG{p}{(}\PYG{n+nb}{cons}\PYG{+w}{ }\PYG{n+nv}{x}\PYG{+w}{ }\PYG{n+nv}{y}\PYG{p}{))}
\PYG{+w}{                                   }\PYG{n+nv}{ys}\PYG{p}{))}
\PYG{+w}{                            }\PYG{n+nv}{xs}\PYG{p}{))}
\PYG{+w}{              }\PYG{o}{\PYGZsq{}}\PYG{p}{(())}
\PYG{+w}{              }\PYG{n+nv}{lists}\PYG{p}{))}


\PYG{c+c1}{;; Use the Cartesian product to take the nth Cartesian power of a particular list.}
\PYG{c+c1}{;; The words of length n formed by a list of generators are precisely}
\PYG{c+c1}{;; the $n$th Cartesian power of the list of generators (ordered selection with replacement).}

\PYG{p}{(}\PYG{k}{define}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{cart\PYGZhy{}power}\PYG{+w}{ }\PYG{n+nv}{xs}\PYG{+w}{ }\PYG{n+nv}{n}\PYG{p}{)}
\PYG{+w}{  }\PYG{p}{(}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{=}\PYG{+w}{ }\PYG{n+nv}{n}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{)}
\PYG{+w}{      }\PYG{p}{(}\PYG{n+nb}{map}\PYG{+w}{ }\PYG{n+nb}{list}\PYG{+w}{ }\PYG{n+nv}{xs}\PYG{p}{)}
\PYG{+w}{      }\PYG{p}{(}\PYG{n+nf}{cart\PYGZhy{}product}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{map}\PYG{+w}{ }\PYG{p}{(}\PYG{k}{lambda}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{\PYGZhy{}}\PYG{p}{)}\PYG{+w}{ }\PYG{n+nv}{xs}\PYG{p}{)}
\PYG{+w}{			 }\PYG{p}{(}\PYG{n+nb}{iota}\PYG{+w}{ }\PYG{n+nv}{n}\PYG{p}{)))))}

\PYG{c+c1}{;; Utility function that divides a list into equal parts,}
\PYG{c+c1}{;; e.g. (1 2 3 4) → ((1 2) (3 4)) or (1 2 3 4 5 6) → ((1 2 3) (4 5 6))}
\PYG{p}{(}\PYG{k}{define}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{chunk}\PYG{+w}{ }\PYG{n+nv}{xs}\PYG{+w}{ }\PYG{n+nv}{n}\PYG{p}{)}
\PYG{+w}{  }\PYG{p}{(}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{null?}\PYG{+w}{ }\PYG{n+nv}{xs}\PYG{p}{)}
\PYG{+w}{      }\PYG{o}{\PYGZsq{}}\PYG{p}{()}
\PYG{+w}{      }\PYG{p}{(}\PYG{k}{let}\PYG{+w}{ }\PYG{p}{((}\PYG{n+nf}{head}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{take}\PYG{+w}{ }\PYG{n+nv}{xs}\PYG{+w}{ }\PYG{n+nv}{n}\PYG{p}{))}
\PYG{+w}{            }\PYG{p}{(}\PYG{n+nf}{rest}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{drop}\PYG{+w}{ }\PYG{n+nv}{xs}\PYG{+w}{ }\PYG{n+nv}{n}\PYG{p}{)))}
\PYG{+w}{        }\PYG{p}{(}\PYG{n+nb}{cons}\PYG{+w}{ }\PYG{n+nv}{head}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{chunk}\PYG{+w}{ }\PYG{n+nv}{rest}\PYG{+w}{ }\PYG{n+nv}{n}\PYG{p}{)))))}

\PYG{c+c1}{;; Generate all elements of $SL_{2}(\mathbb{F}_{3})$ by filtering}
\PYG{c+c1}{;; out 2\PYGZhy{}by\PYGZhy{}2 matrices with entries in \PYGZob{}0, 1, 2\PYGZcb{} without unit determinant.}
\PYG{p}{(}\PYG{k}{define}\PYG{+w}{ }\PYG{n+nv}{sl2mod3}
\PYG{+w}{  }\PYG{p}{(}\PYG{n+nb}{filter}\PYG{+w}{ }\PYG{p}{(}\PYG{k}{lambda}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{mat}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{det}\PYG{+w}{ }\PYG{n+nv}{mat}\PYG{p}{)}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{))}
\PYG{+w}{	  }\PYG{p}{(}\PYG{n+nb}{map}\PYG{+w}{ }\PYG{p}{(}\PYG{k}{lambda}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{l}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{chunk}\PYG{+w}{ }\PYG{n+nv}{l}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{p}{))}
\PYG{+w}{	       }\PYG{p}{(}\PYG{n+nf}{cart\PYGZhy{}power}\PYG{+w}{ }\PYG{o}{\PYGZsq{}}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{p}{)}\PYG{+w}{ }\PYG{l+m+mi}{4}\PYG{p}{))))}


\PYG{c+c1}{;; Recursively evaluate a word.}

\PYG{c+c1}{;; 1\PYGZhy{}words evaluate to themselves.}
\PYG{c+c1}{;; If the word\PYGZsq{}s length is even, associate pairs, multiply the pairs,}
\PYG{c+c1}{;; and evaluate the resulting word of length ½n.}
\PYG{c+c1}{;; If it\PYGZsq{}s odd, multiply the first element of the word with the result of evaluating the rest.}
\PYG{p}{(}\PYG{k}{define}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{eval\PYGZhy{}word}\PYG{+w}{ }\PYG{n+nv}{word}\PYG{p}{)}
\PYG{+w}{  }\PYG{p}{(}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{length}\PYG{+w}{ }\PYG{n+nv}{word}\PYG{p}{)}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{)}
\PYG{+w}{      }\PYG{p}{(}\PYG{n+nb}{car}\PYG{+w}{ }\PYG{n+nv}{word}\PYG{p}{)}
\PYG{+w}{      }\PYG{p}{(}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{modulo}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{length}\PYG{+w}{ }\PYG{n+nv}{word}\PYG{p}{)}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{p}{)}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{)}
\PYG{+w}{	  }\PYG{p}{(}\PYG{n+nf}{eval\PYGZhy{}word}
\PYG{+w}{	   }\PYG{p}{(}\PYG{n+nb}{map}\PYG{+w}{ }\PYG{n+nv}{mmult}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{map}\PYG{+w}{ }\PYG{n+nb}{car}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{chunk}\PYG{+w}{ }\PYG{n+nv}{word}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{map}\PYG{+w}{ }\PYG{n+nb}{cadr}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{chunk}\PYG{+w}{ }\PYG{n+nv}{word}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{p}{))))}
\PYG{+w}{	  }\PYG{p}{(}\PYG{n+nf}{mmult}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{car}\PYG{+w}{ }\PYG{n+nv}{word}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{eval\PYGZhy{}word}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{cdr}\PYG{+w}{ }\PYG{n+nv}{word}\PYG{p}{))))))}




\PYG{c+c1}{;; Given an element and a set of generators (and a cutoff length, to handle non\PYGZhy{}termination),}
\PYG{c+c1}{;; search for a product of the generators equalling the element.}

\PYG{c+c1}{;; Starting from length\PYGZhy{}1 words, create a list of all words consisting of generators.}
\PYG{c+c1}{;; Search through that list to find and return any words that evaluate to the given element;}
\PYG{c+c1}{;; failing that, increment the length and repeat.}
\PYG{p}{(}\PYG{k}{define}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{write\PYGZhy{}as\PYGZhy{}word}\PYG{+w}{ }\PYG{n+nv}{elt}\PYG{+w}{ }\PYG{n+nv}{gens}\PYG{+w}{ }\PYG{n+nv}{maxlen}\PYG{p}{)}
\PYG{+w}{  }\PYG{p}{(}\PYG{k}{let}\PYG{+w}{ }\PYG{n+nv}{words}\PYG{+w}{ }\PYG{p}{((}\PYG{n+nf}{len}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{))}
\PYG{+w}{    }\PYG{p}{(}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{\PYGZgt{}}\PYG{+w}{ }\PYG{n+nv}{len}\PYG{+w}{ }\PYG{n+nv}{maxlen}\PYG{p}{)}
\PYG{+w}{	}\PYG{n+no}{\PYGZsh{}f}
\PYG{+w}{	}\PYG{p}{(}\PYG{k}{let}\PYG{+w}{ }\PYG{p}{((}\PYG{k}{match}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{find}\PYG{+w}{ }\PYG{p}{(}\PYG{k}{lambda}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{word}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{equal?}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{eval\PYGZhy{}word}\PYG{+w}{ }\PYG{n+nv}{word}\PYG{p}{)}\PYG{+w}{ }\PYG{n+nv}{elt}\PYG{p}{))}
\PYG{+w}{			   }\PYG{p}{(}\PYG{n+nf}{cart\PYGZhy{}power}\PYG{+w}{ }\PYG{n+nv}{gens}\PYG{+w}{ }\PYG{n+nv}{len}\PYG{p}{))))}
\PYG{+w}{	  }\PYG{p}{(}\PYG{k}{if}\PYG{+w}{ }\PYG{k}{match}
\PYG{+w}{	      }\PYG{k}{match}
\PYG{+w}{	      }\PYG{p}{(}\PYG{n+nf}{words}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{1+}\PYG{+w}{ }\PYG{n+nv}{len}\PYG{p}{)))))))}


\PYG{c+c1}{;; Generate a pairing of elements of $SL_{2}(\mathbb{F}_{3})$ with the words of $r$ and $s$ that equal them.}
\PYG{p}{(}\PYG{k}{define}\PYG{+w}{ }\PYG{n+nv}{presentation}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{zip}\PYG{+w}{ }\PYG{n+nv}{sl2mod3}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{map}\PYG{+w}{ }\PYG{p}{(}\PYG{k}{lambda}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{sl2}\PYG{p}{)}
\PYG{+w}{                                    }\PYG{p}{(}\PYG{n+nf}{write\PYGZhy{}as\PYGZhy{}word}\PYG{+w}{ }\PYG{n+nv}{sl2}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{list}\PYG{+w}{ }\PYG{n+nv}{r}\PYG{+w}{ }\PYG{n+nv}{s}\PYG{p}{)}\PYG{+w}{ }\PYG{l+m+mi}{5}\PYG{p}{))}\PYG{+w}{ }\PYG{n+nv}{sl2mod3}\PYG{p}{)))}

\PYG{c+c1}{;; Display the result of the above in a way easier on the eyes.}
\PYG{p}{(}\PYG{k}{do}\PYG{+w}{ }\PYG{p}{((}\PYG{n+nf}{i}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{1+}\PYG{+w}{ }\PYG{n+nv}{i}\PYG{p}{)))}
\PYG{+w}{    }\PYG{p}{((}\PYG{n+nb}{\PYGZgt{}=}\PYG{+w}{ }\PYG{n+nv}{i}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{length}\PYG{+w}{ }\PYG{n+nv}{presentation}\PYG{p}{)}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{))}
\PYG{+w}{  }\PYG{p}{(}\PYG{n+nf}{pretty\PYGZhy{}print}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{+w}{ }\PYG{k+kd}{\PYGZsh{}:display?}\PYG{+w}{ }\PYG{n+no}{\PYGZsh{}t}\PYG{p}{)}
\PYG{+w}{  }\PYG{p}{(}\PYG{n+nf}{pretty\PYGZhy{}print}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{car}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{list\PYGZhy{}ref}\PYG{+w}{ }\PYG{n+nv}{presentation}\PYG{+w}{ }\PYG{n+nv}{i}\PYG{p}{))}\PYG{+w}{ }\PYG{k+kd}{\PYGZsh{}:max\PYGZhy{}expr\PYGZhy{}width}\PYG{+w}{ }\PYG{l+m+mi}{6}\PYG{p}{)}
\PYG{+w}{  }\PYG{p}{(}\PYG{n+nf}{pretty\PYGZhy{}print}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{→}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{+w}{ }\PYG{k+kd}{\PYGZsh{}:display?}\PYG{+w}{ }\PYG{n+no}{\PYGZsh{}t}\PYG{p}{)}
\PYG{+w}{  }\PYG{p}{(}\PYG{k}{do}\PYG{+w}{ }\PYG{p}{((}\PYG{n+nf}{j}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{1+}\PYG{+w}{ }\PYG{n+nv}{j}\PYG{p}{)))}
\PYG{+w}{      }\PYG{p}{((}\PYG{n+nb}{\PYGZgt{}=}\PYG{+w}{ }\PYG{n+nv}{j}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{length}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{cadr}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{list\PYGZhy{}ref}\PYG{+w}{ }\PYG{n+nv}{presentation}\PYG{+w}{ }\PYG{n+nv}{i}\PYG{p}{)))}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{))}
\PYG{+w}{    }\PYG{p}{(}\PYG{n+nf}{pretty\PYGZhy{}print}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{list\PYGZhy{}ref}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{cadr}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{list\PYGZhy{}ref}\PYG{+w}{ }\PYG{n+nv}{presentation}\PYG{+w}{ }\PYG{n+nv}{i}\PYG{p}{))}\PYG{+w}{ }\PYG{n+nv}{j}\PYG{p}{)}\PYG{+w}{ }\PYG{k+kd}{\PYGZsh{}:max\PYGZhy{}expr\PYGZhy{}width}\PYG{+w}{ }\PYG{l+m+mi}{6}\PYG{p}{)}
\PYG{+w}{    }\PYG{p}{(}\PYG{n+nf}{pretty\PYGZhy{}print}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{+w}{ }\PYG{k+kd}{\PYGZsh{}:display?}\PYG{+w}{ }\PYG{n+no}{\PYGZsh{}t}\PYG{p}{)))}
\end{Verbatim}
