
@ARTICLE{mal,

  author={Malinowski, Aleksander and Yu, Hao},

  journal={IEEE Transactions on Industrial Informatics}, 

  title={Comparison of Embedded System Design for Industrial Applications}, 

  year={2011},

  volume={7},

  number={2},

  pages={244-254},

  doi={10.1109/TII.2011.2124466}}


@ARTICLE{vlog,

  author={},

  journal={IEEE Std 1800-2017 (Revision of IEEE Std 1800-2012)}, 

  title={IEEE Standard for SystemVerilog--Unified Hardware Design, Specification, and Verification Language}, 

  year={2018},

  volume={},

  number={},

  pages={1-1315},

  doi={10.1109/IEEESTD.2018.8299595}}

@ARTICLE{vhdl,

  author={},

  journal={IEEE Std 1076-2019}, 

  title={IEEE Standard for VHDL Language Reference Manual}, 

  year={2019},

  volume={},

  number={},

  pages={1-673},

  doi={10.1109/IEEESTD.2019.8938196}}

@MISC{Marlow_haskell2010,
    editor = {Simon Marlow},
    title = {Haskell 2010 Language Report}}
@ARTICLE{bnf,
author = {Backus, J.W. and Bauer, F.L. and Green, J. and others},

title = {Revised report on the algorithmic language Algol 60},

journal = {Numerical Mathematics},
year = 1962,
volume = 4,
pages={420–453}
 
}

@BOOK{antlr,
author = {Parr, Terrence},
title = {The Definitive ANTLR 4 Reference},
year = {2013}}
@BOOK{moth,
author = {Hauck, Scott and DeHon, Andre},
title = {Reconfigurable Computing: The Theory and Practice of FPGA-Based Computation},
year = {2008}}

@article{recon,
author = {L\"{u}bbers, Enno and Platzner, Marco},
title = {ReconOS: Multithreaded Programming for Reconfigurable Computers},
year = {2009},
issue_date = {October 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {9},
number = {1},
issn = {1539-9087},
url = {https://doi.org/10.1145/1596532.1596540},
doi = {10.1145/1596532.1596540},
abstract = {Rising logic densities together with the inclusion of dedicated processor cores push
reconfigurable devices from being applied for glue logic and prototyping towards implementing
complete reconfigurable systems-on-chip. The mix of fast CPU cores and fine-grained
reconfigurable logic allows to map both sequential, control-dominated code and highly
parallel data-centric computations onto one platform. However, traditional design
techniques that view specialized hardware circuits as passive coprocessors are ill-suited
for programming these reconfigurable computers. In particular, the programming models
for software—running on an embedded operating system—and digital hardware—synthesized
to an FPGA—lack commonalities, which hinders design space exploration and severely
impairs the potential for code reuse.In this article, we present ReconOS, an execution
environment based on existing embedded operating systems that extends the multithreaded
programming model established in the software domain to reconfigurable hardware. Using
threads and common synchronization and communication services as an abstraction layer,
ReconOS allows for the creation of portable and flexible multithreaded applications
targeting CPU/FPGA systems. This article discusses the ReconOS programming model and
its execution environment, presents implementations based on modern platform FPGAs
and the operating systems eCos and Linux, evaluates time and area overheads of the
proposed mechanisms and, finally, demonstrates the feasibility of the multithreading
design approach on several case studies.},
journal = {ACM Trans. Embed. Comput. Syst.},
month = oct,
articleno = {8},
numpages = {33},
keywords = {operating systems, multithreading, Reconfigurable computing}
}

