:PROPERTIES:
:ID:       ac6388cd-d777-478d-8f12-cc5e3f40f1f9
:END:
#+title: PHITS Python Interface
#+STARTUP: latexpreview

* Motivation

PHITS is the only nontrivial Monte Carlo program. But, in regards to user interface, it might as well have been written for Djikstra's FORTRAN II compiler in 1965...its primary interface is via fixed-format input files clearly designed to be submitted via punch-card to the timesharing mainframe in the basement of your local math department. This makes automatic runtime configuration, like is necessary for at least one of our group's graduate projects, extremely difficult. It is necessary to develop a way to access the functionality of PHITS in a more flexible and user-friendly way.

* Implementation

For better or worse, Python has become the de-facto language of scientific computation. Writing an interface in it enables scientists to use the myriad of tools for computation, data analysis, and numerical experiment already available in the language (CERN ROOT has this capability, for example). Ideally, this would be done by creating callable analogs of the internal PHITS subroutines that are then directly called from Python code. The program being older than structured programming makes this hard: routine preferrence of =COMMON= blocks over explicit parameter passage, global adherance to the six-character identifier limit, and wholly chaotic dependency relationships greatly complicate the theoretically simple application of Numpy's =f2py= conversion tool. As such, it appears necessary for practical reasons to stomach the overhead of programmatically encoding a PHITS job in the =.inp= format only for it to be immediately decoded by the PHITS internals (doing which seems to occupy the lion's share of the program's line count) for every job called.

Users want the program to do one thing: "Simulate some radiation interacting with some matter, and give me some measurements." This suggests two fundamental user-exposed kinds of dataâ€”a =Source= type and a =Target= type. The =Target= type is composed of cells (which are composed of surfaces, which are composed of materials, as in PHITS) on which measurements may be specified.

** Build Command for F2PY

=make -n= output:
mpifort -c -fdefault-double-8 -fdefault-real-8 -fdollar-ok -std=legacy -O0 read00.f
mpifort -fdefault-double-8 -fdefault-real-8 -fdollar-ok -std=legacy  -c -o main.o main.f
mpifort -c -fdefault-double-8 -fdefault-real-8 -fdollar-ok -std=legacy -O3 cosmicray.f90
mpifort -fdefault-double-8 -fdefault-real-8 -fdollar-ok -std=legacy   -o ../phits_LinGfort_MPI mod_ompparallel.o mod_counter.o mod_rsouin.o talmod.o mmbankmod.o membankmod.o ggbankmod.o ggmbankmod.o eventtalmod.o restalmod.o ndatamod.o smm.o gammod.o ggmarraymod.o ggm05mod.o egs5mod.o sumtallymod.o anatallymod.o tetramod.o qmd_cood2_mod.o sangelmod.o usrtalmod.o neutrinomod.o ndata2mod.o magmod.o fragdatamod.o elcmod.o dedx_file.o latdatamod.o levdenmod.o tallsm4.o fissionmod.o lafdatamod.o cosmicmod.o elemdatamod.o itsmode.o usrsors.o usrmgf1.o usrmgf3.o anal-002.o usrdfn1.o usrdfn2.o usrdfn3.o usrresol.o usranatal.o analyz.o celimp.o dataup.o getflt.o magtrs.o nreac.o ovly12.o ovly13.o partrs.o range.o read00.o read01.o read02.o sors.o talls00.o talls01.o talls02.o talls03.o talls04.o talls05.o talls06.o talls07.o tallsm1.o tallsm2.o tallsm3.o update.o wrnt12.o wrnt13.o read03.o marscg.o ggs00.o ggs01.o ggs02.o ggs03.o wrnt10.o geocntl.o ggm01.o ggm02.o ggm03.o ggm04.o ggm05.o ggm06.o ggm07.o ggm08.o ovly14.o ovly15.o usrelst1.o usrelst2.o usrmgt1.o usrmgt2.o talls08.o statistic.o itrminmax.o ggs04.o talls09.o errcheck.o a-angel.o main.o dklos.o ncasc.o nelst.o nevap.o sdml.o gem.o gemset.o utl01.o utl02.o jbook.o masdis.o atima01.o atima02.o atima03.o fismul.o kurotama0.o usrtally.o incelf.o incelfin.o inclp.o inclin.o dwbain.o dwbaD.o dwbaE.o photnucl.o aama.o muoncap.o ompdump.o muonint.o risource.o dpa.o sangel.o gamma2mumu.o scinucl.o gamma1.o bert.o bertin.o bert-bl0.o bert-bl1.o bert-bl2.o utlnmtc.o gamlib.o erupin.o erup.o fissn.o isobert.o isodat.o randmc.o energy.o ndata01.o mars00.o mars01.o mars02.o mars03.o mars04.o jamin.o jam.o jamdat.o jamcoll.o jamdec.o jamcross.o jampdf.o jamsoft.o jamhij.o jamhard.o jambuu.o jamana.o pyjet.o pythia.o pysigh.o qmd00.o qmdcoll.o qmddflt.o qmdgrnd.o qmdinit.o qmdmfld.o qmd00_qmd-nr.o qmdcoll_qmd-nr.o qmdgrnd_qmd-nr.o qmdmfld_qmd-nr.o qmdscm_qmd-nr.o utl03.o a-func.o a-utl00.o a-main0.o a-main1.o a-hsect.o a-line.o a-wtext.o mpi-lin.o unix90.o mdp-uni90.o restart.o resutl.o resttrack.o restcross.o restheat.o restdeposit.o restyield.o restlet.o restsed.o restdpa.o restproduct.o resttime.o restdeposit2.o reststar.o restpoint.o restadjnt.o restwwg.o restvlm.o sumtally.o sumtaltrack.o sumtaldeposit.o sumtalcross.o sumtaldeposit2.o sumtaldpa.o sumtalheat.o sumtallet.o sumtalproduct.o sumtalsed.o sumtalstar.o sumtaltime.o sumtalyield.o sumtalpoint.o sumtaladjnt.o sumtalwwg.o sumtalvlm.o anatally.o anainp.o anataltrack.o anataldeposit.o egs5.o egs5init.o egs5pfpl.o egs5pcoll.o egs5efpl.o egs5ecoll.o egs5ede.o egs5annih.o egs2phits.o egs5esteps0.o egs5edxde.o egs5init2.o egs5elast.o egs5ededx.o egs_elmgfd.o etsmode.o kurbuc.o bitmap_main.o bitmap_a-main0.o bitmap_a_angel.o bitmap_util.o vtk_main.o vtk_gshow.o vtk_util.o cosmicray.o
#+begin_src shell
  f2py -c --fcompiler=gnu95 --f77flags="-c -f-default-real-8 -fdefault-double-8 -fdollar-ok -std=legacy -O0" read00.f
#+end_src
